//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SDiProgrammingTestProject.Core.DBModels
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SDiProgrammingTestEntities : DbContext
    {
        public SDiProgrammingTestEntities()
            : base("name=SDiProgrammingTestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<vPersonGPA> vPersonGPAs { get; set; }
    
        public virtual int CreatePersonGPA(string firstName, string lastName, Nullable<System.DateTime> dateOfBirth, Nullable<double> gpaTotal, Nullable<int> personID, ObjectParameter gpaID)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("dateOfBirth", dateOfBirth) :
                new ObjectParameter("dateOfBirth", typeof(System.DateTime));
    
            var gpaTotalParameter = gpaTotal.HasValue ?
                new ObjectParameter("gpaTotal", gpaTotal) :
                new ObjectParameter("gpaTotal", typeof(double));
    
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("personID", personID) :
                new ObjectParameter("personID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreatePersonGPA", firstNameParameter, lastNameParameter, dateOfBirthParameter, gpaTotalParameter, personIDParameter, gpaID);
        }
    }
}
